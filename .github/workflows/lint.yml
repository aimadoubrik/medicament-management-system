name: Check Code Style

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  pint: # Job for PHP linting using Laravel Pint
    name: PHP (Laravel Pint)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4' # Match your project's PHP version
          tools: composer # Automatically installs composer

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run Pint for code style check
        run: vendor/bin/pint --test -v # The --test flag checks without modifying files

  eslint: # Job for JavaScript/React linting using ESLint
    name: JavaScript (ESLint)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '23' # Match your project's Node.js version
          cache: 'npm'

      - name: Install NPM dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint # Assumes you have an "lint" script in your package.json
                         # Example package.json script: "lint": "eslint ."